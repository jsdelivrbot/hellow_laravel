{
  "manifest": {
    "name": "gulp-rev-replace",
    "version": "0.4.3",
    "description": "Rewrite occurences of filenames which have been renamed by gulp-rev",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/jamesknelson/gulp-rev-replace.git"
    },
    "scripts": {
      "test": "mocha"
    },
    "keywords": [
      "gulpplugin",
      "rev",
      "revision",
      "version",
      "replace",
      "asset"
    ],
    "author": {
      "name": "James K Nelson",
      "email": "james@numbattech.com",
      "url": "http://jamesknelson.com"
    },
    "engines": {
      "node": ">=0.10.0"
    },
    "license": "MIT",
    "dependencies": {
      "gulp-util": "^3.0.7",
      "through2": "^2.0.0"
    },
    "devDependencies": {
      "event-stream": "^3.2.2",
      "gulp-filter": "^3.0.1",
      "gulp-rev": "^6.0.1",
      "mocha": "^2.3.4"
    },
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v1/npm-gulp-rev-replace-0.4.3-72b51848f5f093ad4b77b1d2411081eb78acd46e/package.json",
    "readmeFilename": "README.md",
    "readme": "[gulp](https://github.com/wearefractal/gulp)-rev-replace [![Build Status](https://travis-ci.org/jamesknelson/gulp-rev-replace.svg?branch=master)](https://travis-ci.org/jamesknelson/gulp-rev-replace)\n================\n\nRewrite occurrences of filenames which have been renamed by gulp-rev\n\n## Install\n\n```bash\n$ npm install --save-dev gulp-rev-replace\n```\n\n\n## Usage\n\nPipe through a stream which has both the files you want to be updated, as well as the files which have been renamed.\n\nFor example, we can use [gulp-useref](https://github.com/jonkemp/gulp-useref) to concatenate assets in an index.html,\nand then use [gulp-rev](https://github.com/sindresorhus/gulp-rev) and gulp-rev-replace to cache-bust them.\n\n```js\nvar gulp = require('gulp');\nvar rev = require('gulp-rev');\nvar revReplace = require('gulp-rev-replace');\nvar useref = require('gulp-useref');\nvar filter = require('gulp-filter');\nvar uglify = require('gulp-uglify');\nvar csso = require('gulp-csso');\n\ngulp.task(\"index\", function() {\n  var jsFilter = filter(\"**/*.js\");\n  var cssFilter = filter(\"**/*.css\");\n\n  var userefAssets = useref.assets();\n\n  return gulp.src(\"src/index.html\")\n    .pipe(userefAssets)      // Concatenate with gulp-useref\n    .pipe(jsFilter)\n    .pipe(uglify())             // Minify any javascript sources\n    .pipe(jsFilter.restore())\n    .pipe(cssFilter)\n    .pipe(csso())               // Minify any CSS sources\n    .pipe(cssFilter.restore())\n    .pipe(rev())                // Rename the concatenated files\n    .pipe(userefAssets.restore())\n    .pipe(useref())\n    .pipe(revReplace())         // Substitute in new filenames\n    .pipe(gulp.dest('public'));\n});\n```\n\nIt is also possible to use gulp-rev-replace without gulp-useref:\n\n```js\nvar rev = require(\"gulp-rev\");\nvar revReplace = require(\"gulp-rev-replace\");\ngulp.task(\"revision\", [\"dist:css\", \"dist:js\"], function(){\n  return gulp.src([\"dist/**/*.css\", \"dist/**/*.js\"])\n    .pipe(rev())\n    .pipe(gulp.dest(opt.distFolder))\n    .pipe(rev.manifest())\n    .pipe(gulp.dest(opt.distFolder))\n})\n\ngulp.task(\"revreplace\", [\"revision\"], function(){\n  var manifest = gulp.src(\"./\" + opt.distFolder + \"/rev-manifest.json\");\n\n  return gulp.src(opt.srcFolder + \"/index.html\")\n    .pipe(revReplace({manifest: manifest}))\n    .pipe(gulp.dest(opt.distFolder));\n});\n```\n\n\n## API\n\n### revReplace(options)\n\n#### options.canonicalUris\nType: `boolean`\n\nDefault: `true`\n\nUse canonical Uris when replacing filePaths, i.e. when working with filepaths\nwith non forward slash (`/`) path separators we replace them with forward slash.\n\n#### options.replaceInExtensions\nType: `Array`\n\nDefault: `['.js', '.css', '.html', '.hbs']`\n\nOnly substitute in new filenames in files of these types.\n\n#### options.prefix\nType: `string`\n\nDefault: ``\n\nAdd the prefix string to each replacement.\n\n#### options.manifest\nType: `Stream` (e.g., `gulp.src()`)\n\nRead JSON manifests written out by `rev`. Allows replacing filenames that were\n`rev`ed prior to the current task.\n\n#### options.modifyUnreved, options.modifyReved\nType: `Function`\n\nModify the name of the unreved/reved files before using them. The filename is\npassed to the function as the first argument.\n\nFor example, if in your manifest you have:\n\n```js\n{\"js/app.js.map\": \"js/app-98adc164.js.map\"}\n```\n\nIf you wanted to get rid of the `js/` path just for `.map` files (because they\nare sourcemaps and the references to them are relative, not absolute) you could\ndo the following:\n\n```js\nfunction replaceJsIfMap(filename) {\n    if (filename.indexOf('.map') > -1) {\n        return filename.replace('js/', '');\n    }\n    return filename;\n}\n\nreturn gulp.src(opt.distFolder + '**/*.js')\n    .pipe(revReplace({\n        manifest: manifest,\n        modifyUnreved: replaceJsIfMap,\n        modifyReved: replaceJsIfMap\n    }))\n    .pipe(gulp.dest(opt.distFolder));\n```\n\n## Contributors\n\n- Chad Jablonski\n- Denis Parchenko\n- Evgeniy Vasilev\n- George Song\n- Håkon K. Eide\n- Juan Lasheras\n- Majid Burney\n- Simon Ihmig\n- Vincent Voyer\n- Bradley Abrahams\n\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT) © [James K Nelson](http://jamesknelson.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014 James K Nelson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "http://registry.npm.taobao.org/gulp-rev-replace/download/gulp-rev-replace-0.4.3.tgz#72b51848f5f093ad4b77b1d2411081eb78acd46e",
    "type": "tarball",
    "reference": "http://registry.npm.taobao.org/gulp-rev-replace/download/gulp-rev-replace-0.4.3.tgz",
    "hash": "72b51848f5f093ad4b77b1d2411081eb78acd46e",
    "registry": "npm",
    "packageName": "gulp-rev-replace"
  },
  "registry": "npm",
  "hash": "72b51848f5f093ad4b77b1d2411081eb78acd46e"
}