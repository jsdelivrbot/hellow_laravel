{
  "manifest": {
    "name": "ternary-stream",
    "description": "Fork stream based on passed condition, and collect down-stream",
    "version": "1.2.3",
    "homepage": "https://github.com/robrich/ternary-stream",
    "repository": {
      "type": "git",
      "url": "git://github.com/robrich/ternary-stream.git"
    },
    "author": {
      "name": "Rob Richardson",
      "url": "http://robrich.org/"
    },
    "main": "./index.js",
    "keywords": [
      "conditional",
      "if",
      "ternary",
      "stream"
    ],
    "dependencies": {
      "duplexer2": "~0.0.2",
      "merge-stream": "~0.1.6",
      "fork-stream": "~0.0.4",
      "through2": "~0.6.3"
    },
    "devDependencies": {
      "jshint": "^2.5.10",
      "mocha": "^2.0.1",
      "should": "^4.2.1"
    },
    "scripts": {
      "test": "mocha && jshint ./index.js && jshint ./test/."
    },
    "engines": {
      "node": ">= 0.10.0"
    },
    "licenses": [
      {
        "type": "MIT",
        "url": "http://github.com/robrich/ternary-stream/raw/master/LICENSE"
      }
    ],
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v1/npm-ternary-stream-1.2.3-f1969f83847f9642261bc142e17ee200aada83fd/package.json",
    "readmeFilename": "README.md",
    "readme": "ternary-stream ![status](https://secure.travis-ci.org/robrich/ternary-stream.png?branch=master)\n=======\n\nA ternary stream: conditionally control the flow of stream data\n\n## Usage\n\n1: Conditionally filter content\n\n**Condition**\n\n![][condition]\n\nif the condition returns truthy, data is piped to the child stream\n\n```js\nvar ternaryStream = require('ternary-stream');\n\nvar condition = function (data) {\n  return true;\n};\n\nprocess.stdin\n  .pipe(ternaryStream(condition, process.stdout))\n  .pipe(fs.createWriteStream('./out.txt'));\n});\n```\n\nData will conditionally go to stdout, and always go to the file\n\n2: Ternary stream\n\n**Ternary**\n\n![][ternary]\n\n\n```javascript\nvar ternaryStream = require('ternary-stream');\nvar through2 = require('through2');\n\nvar count = 0;\nvar condition = function (data) {\n  count++;\n  return count % 2;\n};\n\nprocess.stdin\n  .pipe(ternaryStream(condition, fs.createWriteStream('./truthy.txt'), fs.createWriteStream('./falsey.txt')))\n  .pipe(process.stdout);\n});\n```\n\nData will either go to truthy.txt (if condition is true) or falsey.txt (if condition is false) and will always go to stdout\n\n## API\n\n### ternaryStream(condition, stream [, elseStream])\n\nternary-stream will pipe data to `stream` whenever `condition` is truthy.\n\nIf `condition` is falsey and `elseStream` is passed, data will pipe to `elseStream`.\n\nAfter data is piped to `stream` or `elseStream` or neither, data is piped down-stream.\n\n#### Parameters\n\n##### condition\n\nType: `function`: takes in stream data and returns `boolean`\n\n```js\nfunction (data) {\n\treturn true; // or false\n}\n```\n\n##### stream\n\nStream for ternary-stream to pipe data into when condition is truthy.\n\n##### elseStream\n\nOptional, Stream for ternary-stream to pipe data into when condition is falsey.\n\n\nLICENSE\n-------\n\n(MIT License)\n\nCopyright (c) 2014 [Richardson & Sons, LLC](http://richardsonandsons.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[condition]: https://rawgithub.com/robrich/ternary-stream/master/img/condition.svg\n[ternary]: https://rawgithub.com/robrich/ternary-stream/master/img/ternary.svg\n",
    "license": "MIT",
    "licenseText": "Copyright (c) 2014 [Richardson & Sons, LLC](http://richardsonandsons.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "http://registry.npm.taobao.org/ternary-stream/download/ternary-stream-1.2.3.tgz#f1969f83847f9642261bc142e17ee200aada83fd",
    "type": "tarball",
    "reference": "http://registry.npm.taobao.org/ternary-stream/download/ternary-stream-1.2.3.tgz",
    "hash": "f1969f83847f9642261bc142e17ee200aada83fd",
    "registry": "npm",
    "packageName": "ternary-stream"
  },
  "registry": "npm",
  "hash": "f1969f83847f9642261bc142e17ee200aada83fd"
}