{
  "manifest": {
    "name": "vinyl-source-stream",
    "description": "Use conventional text streams at the start of your gulp or vinyl pipelines",
    "version": "1.1.0",
    "main": "index.js",
    "browser": "index.js",
    "dependencies": {
      "vinyl": "^0.4.3",
      "through2": "^0.6.1"
    },
    "devDependencies": {
      "tape": "~2.3.2",
      "vinyl-map": "0.0.1",
      "gulp-rename": "~0.2.1",
      "gulp": "~3.3.0"
    },
    "scripts": {
      "test": "node test"
    },
    "author": {
      "name": "Hugh Kennedy",
      "email": "hughskennedy@gmail.com",
      "url": "http://hughsk.io/"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git://github.com/hughsk/vinyl-source-stream"
    },
    "bugs": {
      "url": "https://github.com/hughsk/vinyl-source-stream/issues"
    },
    "homepage": "https://github.com/hughsk/vinyl-source-stream",
    "keywords": [
      "vinyl",
      "gulp",
      "gulpfriendly",
      "vanilla",
      "stream",
      "string",
      "text",
      "classic"
    ],
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v1/npm-vinyl-source-stream-1.1.0-44cbe5108205279deb0c5653c094a2887938b1ab/package.json",
    "readmeFilename": "README.md",
    "readme": "# vinyl-source-stream [![Flattr this!](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=hughskennedy&url=http://github.com/hughsk/vinyl-source-stream&title=vinyl-source-stream&description=hughsk/vinyl-source-stream%20on%20GitHub&language=en_GB&tags=flattr,github,javascript&category=software)[![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\nUse conventional text streams at the start of your\n[gulp](http://github.com/gulpjs/gulp) or\n[vinyl](http://github.com/wearefractal/vinyl) pipelines, making for nicer\ninteroperability with the existing npm stream ecosystem.\n\nTake, for example, [browserify](http://browserify.org/). There's the\n[gulp-browserify](https://github.com/deepak1556/gulp-browserify) and\n[gulpify](https://github.com/hughsk/gulpify) plugins, which you can use in\ncombination with gulp to get browserify working in your build. Unfortunately,\nthese plugins come with additional overhead: an extra GitHub repository, npm\nmodule, maintainer, tests, semantics, etc. It's much simpler\nin this case to use the original module directly where you can, which is what\n`vinyl-source-stream` handles for you.\n\n## Usage ##\n\n[![vinyl-source-stream](https://nodei.co/npm/vinyl-source-stream.png?mini=true)](https://nodei.co/npm/vinyl-source-stream)\n\nOur previous example, browserify, has a streaming API for its output bundles\nwhich you can use directly. This module is just a bridge that makes it\nsimple to use conventional text streams such as this in combination with gulp.\nHere's an example of using `vinyl-source-stream` and `browserify`, compared to\nusing `gulpify`:\n\n``` javascript\nvar source = require('vinyl-source-stream')\nvar streamify = require('gulp-streamify')\nvar browserify = require('browserify')\nvar uglify = require('gulp-uglify')\nvar gulpify = require('gulpify')\nvar rename = require('gulp-rename')\nvar gulp = require('gulp')\n\n// using gulpify:\ngulp.task('gulpify', function() {\n  gulp.src('index.js')\n    .pipe(gulpify())\n    .pipe(uglify())\n    .pipe(rename('bundle.js'))\n    .pipe(gulp.dest('./'))\n})\n\n// using vinyl-source-stream:\ngulp.task('browserify', function() {\n  var bundleStream = browserify('./index.js').bundle()\n\n  bundleStream\n    .pipe(source('index.js'))\n    .pipe(streamify(uglify()))\n    .pipe(rename('bundle.js'))\n    .pipe(gulp.dest('./'))\n})\n```\n\nNot all that different, really! The nice thing here is that you're getting the\nup-to-date browserify API and don't have to worry about the plugin's available\nfunctionality. Of course, these same benefits apply for any readable text\nstream you can find on npm.\n\n## API ##\n\n### `stream = sourceStream([filename])` ###\n\nCreates a through stream which takes text as input, and emits a single\nvinyl file instance for streams down the pipeline to consume.\n\n`filename` is a \"pretend\" filename to use for your file, which some streams\nmight use to determine various factors such as the final filename of your file.\nIt should be a string, and though recommended, using this argument is optional.\n\n## License ##\n\nMIT. See [LICENSE.md](http://github.com/hughsk/vinyl-source-stream/blob/master/LICENSE.md) for details.\n",
    "licenseText": "## The MIT License (MIT) ##\n\nCopyright (c) 2014 Hugh Kennedy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "http://registry.npm.taobao.org/vinyl-source-stream/download/vinyl-source-stream-1.1.0.tgz#44cbe5108205279deb0c5653c094a2887938b1ab",
    "type": "tarball",
    "reference": "http://registry.npm.taobao.org/vinyl-source-stream/download/vinyl-source-stream-1.1.0.tgz",
    "hash": "44cbe5108205279deb0c5653c094a2887938b1ab",
    "registry": "npm",
    "packageName": "vinyl-source-stream"
  },
  "registry": "npm",
  "hash": "44cbe5108205279deb0c5653c094a2887938b1ab"
}